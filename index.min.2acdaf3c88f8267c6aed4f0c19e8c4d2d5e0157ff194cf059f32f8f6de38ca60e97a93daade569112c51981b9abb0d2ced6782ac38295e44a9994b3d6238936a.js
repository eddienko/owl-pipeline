var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var b=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});b.add({id:0,href:"https://eddienko.github.io/owl-pipeline/docs/prologue/introduction/",title:"Introduction",description:"",content:'\u003cp\u003eThe Owl Scheduler is made from two different components.\nThe \u003ca href="/docs/server/introduction/"\u003eOwl Server\u003c/a\u003e is installed in the Kubernetes cluster and is in charge\nof receiving requests for jobs, allocating the necessary resources and running them.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href="/docs/client/introduction/"\u003eOwl Client\u003c/a\u003e runs in the user space\n(i.e. in any other system outside of the cluster) and is used to interact with the server,\nmainly to submit jobs and perform some administrative tasks.\u003c/p\u003e\n\u003ch2 id="pre-requisites"\u003ePre-Requisites\u003c/h2\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\r\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ‘‰ \u003c/div\u003e\r\n  \r\n    \u003cdiv class="w-100"\u003eYou will need a running Kubernetes cluster. \u003c/div\u003e\r\n  \r\n\u003c/div\u003e\r\n\n\u003cp\u003eIn order to install and run the scheduler you need access to a Kubernetes cluster. We have tried Owl in the following\nversions:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eKubernetes 1.21 (Docker Desktop)\u003c/li\u003e\n\u003cli\u003eKubernetes 1.22\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="get-started"\u003eGet started\u003c/h2\u003e\n\u003ch3 id="install-the-owl-server"\u003eInstall the Owl Server\u003c/h3\u003e\n\u003cp\u003eStep-by-step instructions on how to install the server in your Kubernetes cluster. \u003ca href="/docs/server/introduction/"\u003eOwl Server â†’\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id="install-the-owl-client"\u003eInstall the Owl Client\u003c/h3\u003e\n\u003cp\u003eStep-by-step instructions on how to install the client. \u003ca href="/docs/client/introduction/"\u003eOwl Client â†’\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id="tutorial"\u003eTutorial\u003c/h3\u003e\n\u003cp\u003eStep-by-step instructions on how to run your first job. \u003ca href="https://getdoks.org/tutorial/introduction/"\u003eTutorial â†’\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="contributing"\u003eContributing\u003c/h2\u003e\n\u003cp\u003eFind out how to contribute to the project. \u003ca href="https://getdoks.org/docs/contributing/how-to-contribute/"\u003eContributing â†’\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="help"\u003eHelp\u003c/h2\u003e\n\u003cp\u003eGet help on Doks. [Help â†’]\u003c/p\u003e\n'}).add({id:1,href:"https://eddienko.github.io/owl-pipeline/docs/server/introduction/",title:"Introduction",description:"",content:""}).add({id:2,href:"https://eddienko.github.io/owl-pipeline/docs/server/install/",title:"Install",description:"",content:'\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\r\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ‘‰ \u003c/div\u003e\r\n  \r\n    \u003cdiv class="w-100"\u003eThroughout this documentation we assume that Helm 3 is installed. \u003c/div\u003e\r\n  \r\n\u003c/div\u003e\r\n\n\u003ch2 id="add-the-helm-repository"\u003eAdd the Helm repository\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ehelm repo add owl https://eddienko.github.io/owl-pipeline/charts\r\nhelm update\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="install-the-chart"\u003eInstall the chart\u003c/h2\u003e\n\u003cp\u003eThe Owl chart bootstraps the Owl Scheduler on Kubernetes using the Helm package manager.\nThe chart deploys the following components on the Kubernetes cluster:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOwl Scheduler\u003c/li\u003e\n\u003cli\u003eOwl API\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode\u003ehelm install owl owl/owl-server \\ \r\n      -n owl --create-namespace -f values.yaml\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhere \u003ccode\u003evalues.yaml\u003c/code\u003e is a YAML file containing local configuration details.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003cth\u003eValue\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eimage.repository\u003c/td\u003e\n\u003ctd\u003ename of the Docker image to use to run the server\u003c/td\u003e\n\u003ctd\u003eimaxt/owl-server\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eimage.pullPolicy\u003c/td\u003e\n\u003ctd\u003epull policy\u003c/td\u003e\n\u003ctd\u003eIfNotExists\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eimage.tag\u003c/td\u003e\n\u003ctd\u003eimage tag\u003c/td\u003e\n\u003ctd\u003elatest\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003etoken\u003c/td\u003e\n\u003ctd\u003eseret token used in the communication between the Owl scheduler ant the API\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eloglevel\u003c/td\u003e\n\u003ctd\u003edefault log level\u003c/td\u003e\n\u003ctd\u003eINFO\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003edbi\u003c/td\u003e\n\u003ctd\u003edatabase connection string\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eresources.limits.cpu\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eresources.limits.memory\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e7G\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eresources.requests.cpu\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eresources.requests.memory\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e7G\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epipeline.extraVolumes\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e{}\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003epipeline.extraVolumeMounts\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003ctd\u003e{}\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n'}).add({id:3,href:"https://eddienko.github.io/owl-pipeline/docs/client/introduction/",title:"Introduction",description:"",content:"\u003cp\u003eThw Owl client is used to interact with the Owl Server and submit jobs to the Kubernetes cluster.\nIt can also be used to perform some admin tasks.\u003c/p\u003e\n"}).add({id:4,href:"https://eddienko.github.io/owl-pipeline/docs/client/install/",title:"Quick Start",description:"",content:'\u003ch2 id="install"\u003eInstall\u003c/h2\u003e\n\u003cp\u003eThe Owl client requires Python 3.7 or higher. It is recommended to create a Python environment,\ne.g., using conda:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003econda create -n pipelines python=3.7\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn order to use the new environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003econda activate pipelines\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe latest stable version of the Owl client can be installed from PyPi:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003epip install owl-pipeline-client\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="authenticate-to-remote-server"\u003eAuthenticate to remote server\u003c/h2\u003e\n\u003cp\u003eUsing your credentials\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eowl login\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will ask for your username and password. Credentials will be saved to a file in your home\ndirectory \u003ccode\u003e$HOME/.owlrc\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id="pipeline-definition-file"\u003ePipeline definition file\u003c/h2\u003e\n\u003cp\u003eList all available pipelines in the remote server using:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eowl pdef list\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf the server has been configured as per the\ninstructions the \u003ccode\u003eexample\u003c/code\u003e pipeline will be available.\nRetrieve the pipeline definition file using:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eowl pdef get example -o example.yml\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis looks like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-yaml"\u003e# Version of the configuration file\r\nversion: 1\r\n\r\n# Name of the pipeline\r\nname: example\r\n\r\n# Pipeline arguments\r\ndatalen: 100\r\n\r\n# Resources requested\r\nresources:\r\n  threads: 10\r\n  workers: 2\r\n  memory: 10\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe example pipeline runs a series of dummy computations using \u003ca href="https://dask.org"\u003eDask\u003c/a\u003e.\nIt has a unique input parameter\n\u003ccode\u003edatalen\u003c/code\u003e which basically controls how long the pipeline runs.\u003c/p\u003e\n\u003ch2 id="submit-pipeline"\u003eSubmit pipeline\u003c/h2\u003e\n\u003cp\u003eAdjust the resources and submit the pipeline using:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eowl submit example.yml\r\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:5,href:"https://eddienko.github.io/owl-pipeline/docs/client/commands/",title:"Commands",description:"",content:'\u003ch2 id="authentication"\u003eAuthentication\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# Authenticate in the remote server\r\nowl login\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="pipeline-definitions"\u003ePipeline definitions\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# List available pipelines\r\nowl pdef list\r\n\r\n# Get pipeline definition for pipeline `example`\r\nowl pdef get example\r\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="job-submission-and-management"\u003eJob submission and management\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003e# Submit job\r\nowl submit pipeline.yml\r\n\r\n# Query status of Job ID 1\r\nowl status get 1\r\n\r\n# Get logs from Job ID 1\r\nowl logs get 1\r\n\r\n# Cancel Job ID 1\r\nowl cancel 1\r\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:6,href:"https://eddienko.github.io/owl-pipeline/docs/client/admin/",title:"Admin",description:"",content:""}).add({id:7,href:"https://eddienko.github.io/owl-pipeline/docs/pipelines/development/",title:"Creating Pipelines",description:"",content:"\u003cp\u003eOwl pipelines are pip installable Python packages. This page shows how to create a pipeline from scratch.\u003c/p\u003e\n"}).add({id:8,href:"https://eddienko.github.io/owl-pipeline/docs/help/how-to-contribute/",title:"How to Contribute",description:"",content:'\u003cp\u003eContribute to the development of the Owl Scheduler, improve documentation, or submit issues.\u003c/p\u003e\n\u003ch2 id="contribute"\u003eContribute\u003c/h2\u003e\n\u003ch3 id="create-an-issue"\u003eCreate an issue\u003c/h3\u003e\n\u003ch2 id="improve-documentation"\u003eImprove documentation\u003c/h2\u003e\n\u003ch3 id="create-an-issue-1"\u003eCreate an issue\u003c/h3\u003e\n'}).add({id:9,href:"https://eddienko.github.io/owl-pipeline/docs/help/troubleshooting/",title:"Troubleshooting",description:"Solutions to common problems.",content:'\u003ch2 id="problems-updating-npm-packages"\u003eProblems updating npm packages\u003c/h2\u003e\n\u003cp\u003eDelete the \u003ccode\u003e./node_modules\u003c/code\u003e folder, and run again:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm install\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="problems-with-cache"\u003eProblems with cache\u003c/h2\u003e\n\u003cp\u003eDelete the temporary directories:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003enpm run clean\n\u003c/code\u003e\u003c/pre\u003e\n'}).add({id:10,href:"https://eddienko.github.io/owl-pipeline/docs/help/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:'\u003ch2 id="hyas"\u003eHyas?\u003c/h2\u003e\n\u003cp\u003eDoks is a \u003ca href="https://gethyas.com/themes/"\u003eHyas theme\u003c/a\u003e build by the creator of Hyas.\u003c/p\u003e\n\u003ch2 id="footer-notice"\u003eFooter notice?\u003c/h2\u003e\n\u003cp\u003ePlease keep it in place.\u003c/p\u003e\n\u003ch2 id="keyboard-shortcuts-for-search"\u003eKeyboard shortcuts for search?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003efocus: \u003ccode\u003e/\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eselect: \u003ccode\u003eâ†“\u003c/code\u003e and \u003ccode\u003eâ†‘\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eopen: \u003ccode\u003eEnter\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eclose: \u003ccode\u003eEsc\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="other-documentation"\u003eOther documentation?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://docs.netlify.com/"\u003eNetlify\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://gohugo.io/documentation/"\u003eHugo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="can-i-get-support"\u003eCan I get support?\u003c/h2\u003e\n\u003cp\u003eCreate a topic:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://community.netlify.com/"\u003eNetlify Community\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://discourse.gohugo.io/"\u003eHugo Forums\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/h-enk/doks/discussions"\u003eDoks Discussions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="contact-the-creator"\u003eContact the creator?\u003c/h2\u003e\n\u003cp\u003eSend \u003ccode\u003eh-enk\u003c/code\u003e a message:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href="https://community.netlify.com/"\u003eNetlify Community\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://discourse.gohugo.io/"\u003eHugo Forums\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="https://github.com/h-enk/doks/discussions"\u003eDoks Discussions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n'}).add({id:11,href:"https://eddienko.github.io/owl-pipeline/docs/help/",title:"Help",description:"Help Doks.",content:""}).add({id:12,href:"https://eddienko.github.io/owl-pipeline/docs/client/",title:"Owl Client",description:"Owl Client",content:""}).add({id:13,href:"https://eddienko.github.io/owl-pipeline/docs/prologue/",title:"Owl Scheduler",description:"",content:""}).add({id:14,href:"https://eddienko.github.io/owl-pipeline/docs/",title:"Docs",description:"Docs Doks.",content:""}),userinput.addEventListener('input',c,!0),suggestions.addEventListener('click',e,!0);function c(){var h=this.value,f=b.search(h,{limit:5,index:["content"],enrich:!0}),g=suggestions.childNodes,e=0,i=f.length,c;for(suggestions.classList.remove('d-none'),f.forEach(function(b){c=document.createElement('div'),c.innerHTML='<a href><span></span><span></span></a>',a=c.querySelector('a'),t=c.querySelector('span:first-child'),d=c.querySelector('span:nth-child(2)'),a.href=b.result[e].doc.href,t.textContent=b.result[e].doc.title,d.textContent=b.result[e].doc.description,suggestions.appendChild(c)});g.length>i;)suggestions.removeChild(g[e])}function e(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()